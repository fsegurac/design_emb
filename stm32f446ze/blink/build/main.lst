ARM GAS  /tmp/ccLxLnxJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB125:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccLxLnxJ.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  46:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  47:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** int main(void)
  56:Src/main.c    **** {
  57:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  58:Src/main.c    **** 
  59:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  60:Src/main.c    ****   HAL_Init();
  61:Src/main.c    **** 
  62:Src/main.c    ****   /* Configure the system clock */
  63:Src/main.c    ****   SystemClock_Config();
  64:Src/main.c    **** 
  65:Src/main.c    ****   /* Initialize all configured peripherals */
  66:Src/main.c    ****   MX_GPIO_Init();
  67:Src/main.c    **** 
  68:Src/main.c    ****   /* Infinite loop */
  69:Src/main.c    ****   while (1)
  70:Src/main.c    ****   {
  71:Src/main.c    **** 	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_1);
  72:Src/main.c    **** 	HAL_Delay(200);
  73:Src/main.c    ****   }
  74:Src/main.c    **** 
  75:Src/main.c    **** }
  76:Src/main.c    **** 
  77:Src/main.c    **** /**
  78:Src/main.c    ****   * @brief System Clock Configuration
  79:Src/main.c    ****   * @retval None
  80:Src/main.c    ****   */
  81:Src/main.c    **** void SystemClock_Config(void)
  82:Src/main.c    **** {
  83:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  84:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  85:Src/main.c    **** 
  86:Src/main.c    ****   /**Configure the main internal regulator output voltage 
  87:Src/main.c    ****   */
  88:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/ccLxLnxJ.s 			page 3


  89:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  90:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
  91:Src/main.c    ****   */
  92:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  93:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  94:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  95:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  96:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  97:Src/main.c    ****   {
  98:Src/main.c    ****     Error_Handler();
  99:Src/main.c    ****   }
 100:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 101:Src/main.c    ****   */
 102:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 103:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 104:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 105:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 106:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 107:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 108:Src/main.c    **** 
 109:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 110:Src/main.c    ****   {
 111:Src/main.c    ****     Error_Handler();
 112:Src/main.c    ****   }
 113:Src/main.c    **** }
 114:Src/main.c    **** 
 115:Src/main.c    **** /**
 116:Src/main.c    ****   * @brief GPIO Initialization Function
 117:Src/main.c    ****   * @param None
 118:Src/main.c    ****   * @retval None
 119:Src/main.c    ****   */
 120:Src/main.c    **** static void MX_GPIO_Init(void)
 121:Src/main.c    **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 122:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 122 0
  41 0004 0022     		movs	r2, #0
  42 0006 0592     		str	r2, [sp, #20]
  43 0008 0692     		str	r2, [sp, #24]
  44 000a 0792     		str	r2, [sp, #28]
  45 000c 0892     		str	r2, [sp, #32]
  46 000e 0992     		str	r2, [sp, #36]
  47              	.LBB2:
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* GPIO Ports Clock Enable */
 125:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  /tmp/ccLxLnxJ.s 			page 4


  48              		.loc 1 125 0
  49 0010 0092     		str	r2, [sp]
  50 0012 224B     		ldr	r3, .L3
  51 0014 196B     		ldr	r1, [r3, #48]
  52 0016 41F00401 		orr	r1, r1, #4
  53 001a 1963     		str	r1, [r3, #48]
  54 001c 196B     		ldr	r1, [r3, #48]
  55 001e 01F00401 		and	r1, r1, #4
  56 0022 0091     		str	r1, [sp]
  57 0024 0099     		ldr	r1, [sp]
  58              	.LBE2:
  59              	.LBB3:
 126:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  60              		.loc 1 126 0
  61 0026 0192     		str	r2, [sp, #4]
  62 0028 196B     		ldr	r1, [r3, #48]
  63 002a 41F08001 		orr	r1, r1, #128
  64 002e 1963     		str	r1, [r3, #48]
  65 0030 196B     		ldr	r1, [r3, #48]
  66 0032 01F08001 		and	r1, r1, #128
  67 0036 0191     		str	r1, [sp, #4]
  68 0038 0199     		ldr	r1, [sp, #4]
  69              	.LBE3:
  70              	.LBB4:
 127:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  71              		.loc 1 127 0
  72 003a 0292     		str	r2, [sp, #8]
  73 003c 196B     		ldr	r1, [r3, #48]
  74 003e 41F00201 		orr	r1, r1, #2
  75 0042 1963     		str	r1, [r3, #48]
  76 0044 196B     		ldr	r1, [r3, #48]
  77 0046 01F00201 		and	r1, r1, #2
  78 004a 0291     		str	r1, [sp, #8]
  79 004c 0299     		ldr	r1, [sp, #8]
  80              	.LBE4:
  81              	.LBB5:
 128:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 128 0
  83 004e 0392     		str	r2, [sp, #12]
  84 0050 196B     		ldr	r1, [r3, #48]
  85 0052 41F00101 		orr	r1, r1, #1
  86 0056 1963     		str	r1, [r3, #48]
  87 0058 196B     		ldr	r1, [r3, #48]
  88 005a 01F00101 		and	r1, r1, #1
  89 005e 0391     		str	r1, [sp, #12]
  90 0060 0399     		ldr	r1, [sp, #12]
  91              	.LBE5:
  92              	.LBB6:
 129:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  93              		.loc 1 129 0
  94 0062 0492     		str	r2, [sp, #16]
  95 0064 1A6B     		ldr	r2, [r3, #48]
  96 0066 42F00802 		orr	r2, r2, #8
  97 006a 1A63     		str	r2, [r3, #48]
  98 006c 1B6B     		ldr	r3, [r3, #48]
  99 006e 03F00803 		and	r3, r3, #8
 100 0072 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccLxLnxJ.s 			page 5


 101 0074 049B     		ldr	r3, [sp, #16]
 102              	.LBE6:
 130:Src/main.c    **** 
 131:Src/main.c    ****   /*Configure GPIO pin Output Level - Fabio */
 132:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 103              		.loc 1 132 0
 104 0076 0A4C     		ldr	r4, .L3+4
 105 0078 2046     		mov	r0, r4
 106 007a 0221     		movs	r1, #2
 107 007c 0122     		movs	r2, #1
 108 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 109              	.LVL0:
 133:Src/main.c    **** 
 134:Src/main.c    ****   /*Configure GPIO pin : PB1 */
 135:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 110              		.loc 1 135 0
 111 0082 0223     		movs	r3, #2
 112 0084 0593     		str	r3, [sp, #20]
 136:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 136 0
 114 0086 0122     		movs	r2, #1
 115 0088 0692     		str	r2, [sp, #24]
 137:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 116              		.loc 1 137 0
 117 008a 0792     		str	r2, [sp, #28]
 138:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 118              		.loc 1 138 0
 119 008c 0893     		str	r3, [sp, #32]
 139:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 120              		.loc 1 139 0
 121 008e 2046     		mov	r0, r4
 122 0090 05A9     		add	r1, sp, #20
 123 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL1:
 140:Src/main.c    **** 
 141:Src/main.c    ****  /*Configure GPIO pin Output Level - Daniel */ 
 142:Src/main.c    **** // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 143:Src/main.c    **** 
 144:Src/main.c    ****   /*Configure GPIO pin : PB1 */
 145:Src/main.c    **** /*  GPIO_InitStruct.Pin = GPIO_PIN_2;
 146:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 147:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 148:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 149:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);*/
 150:Src/main.c    **** 
 151:Src/main.c    **** 
 152:Src/main.c    **** }
 125              		.loc 1 152 0
 126 0096 0AB0     		add	sp, sp, #40
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 8
 129              		@ sp needed
 130 0098 10BD     		pop	{r4, pc}
 131              	.L4:
 132 009a 00BF     		.align	2
 133              	.L3:
 134 009c 00380240 		.word	1073887232
ARM GAS  /tmp/ccLxLnxJ.s 			page 6


 135 00a0 00040240 		.word	1073873920
 136              		.cfi_endproc
 137              	.LFE125:
 139              		.section	.text.SystemClock_Config,"ax",%progbits
 140              		.align	2
 141              		.global	SystemClock_Config
 142              		.thumb
 143              		.thumb_func
 145              	SystemClock_Config:
 146              	.LFB124:
  82:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 147              		.loc 1 82 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 80
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 156 0002 94B0     		sub	sp, sp, #80
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 88
  83:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159              		.loc 1 83 0
 160 0004 0024     		movs	r4, #0
 161 0006 0794     		str	r4, [sp, #28]
 162 0008 0894     		str	r4, [sp, #32]
 163 000a 0994     		str	r4, [sp, #36]
 164 000c 0A94     		str	r4, [sp, #40]
 165 000e 0B94     		str	r4, [sp, #44]
 166 0010 0C94     		str	r4, [sp, #48]
 167 0012 0D94     		str	r4, [sp, #52]
 168 0014 0E94     		str	r4, [sp, #56]
 169 0016 0F94     		str	r4, [sp, #60]
 170 0018 1094     		str	r4, [sp, #64]
 171 001a 1194     		str	r4, [sp, #68]
 172 001c 1294     		str	r4, [sp, #72]
 173 001e 1394     		str	r4, [sp, #76]
  84:Src/main.c    **** 
 174              		.loc 1 84 0
 175 0020 0294     		str	r4, [sp, #8]
 176 0022 0394     		str	r4, [sp, #12]
 177 0024 0494     		str	r4, [sp, #16]
 178 0026 0594     		str	r4, [sp, #20]
 179 0028 0694     		str	r4, [sp, #24]
 180              	.LBB7:
  88:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 181              		.loc 1 88 0
 182 002a 0094     		str	r4, [sp]
 183 002c 164B     		ldr	r3, .L7
 184 002e 1A6C     		ldr	r2, [r3, #64]
 185 0030 42F08052 		orr	r2, r2, #268435456
 186 0034 1A64     		str	r2, [r3, #64]
 187 0036 1B6C     		ldr	r3, [r3, #64]
 188 0038 03F08053 		and	r3, r3, #268435456
 189 003c 0093     		str	r3, [sp]
ARM GAS  /tmp/ccLxLnxJ.s 			page 7


 190 003e 009B     		ldr	r3, [sp]
 191              	.LBE7:
 192              	.LBB8:
  89:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 193              		.loc 1 89 0
 194 0040 0194     		str	r4, [sp, #4]
 195 0042 124A     		ldr	r2, .L7+4
 196 0044 1368     		ldr	r3, [r2]
 197 0046 23F44043 		bic	r3, r3, #49152
 198 004a 43F48043 		orr	r3, r3, #16384
 199 004e 1360     		str	r3, [r2]
 200 0050 1368     		ldr	r3, [r2]
 201 0052 03F44043 		and	r3, r3, #49152
 202 0056 0193     		str	r3, [sp, #4]
 203 0058 019B     		ldr	r3, [sp, #4]
 204              	.LBE8:
  92:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 205              		.loc 1 92 0
 206 005a 0223     		movs	r3, #2
 207 005c 0793     		str	r3, [sp, #28]
  93:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 208              		.loc 1 93 0
 209 005e 0123     		movs	r3, #1
 210 0060 0A93     		str	r3, [sp, #40]
  94:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 211              		.loc 1 94 0
 212 0062 1023     		movs	r3, #16
 213 0064 0B93     		str	r3, [sp, #44]
  95:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 214              		.loc 1 95 0
 215 0066 0D94     		str	r4, [sp, #52]
  96:Src/main.c    ****   {
 216              		.loc 1 96 0
 217 0068 07A8     		add	r0, sp, #28
 218 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 219              	.LVL2:
 102:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 220              		.loc 1 102 0
 221 006e 0F23     		movs	r3, #15
 222 0070 0293     		str	r3, [sp, #8]
 104:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 223              		.loc 1 104 0
 224 0072 0394     		str	r4, [sp, #12]
 105:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 225              		.loc 1 105 0
 226 0074 0494     		str	r4, [sp, #16]
 106:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 227              		.loc 1 106 0
 228 0076 0594     		str	r4, [sp, #20]
 107:Src/main.c    **** 
 229              		.loc 1 107 0
 230 0078 0694     		str	r4, [sp, #24]
 109:Src/main.c    ****   {
 231              		.loc 1 109 0
 232 007a 02A8     		add	r0, sp, #8
 233 007c 2146     		mov	r1, r4
 234 007e FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccLxLnxJ.s 			page 8


 235              	.LVL3:
 113:Src/main.c    **** 
 236              		.loc 1 113 0
 237 0082 14B0     		add	sp, sp, #80
 238              	.LCFI5:
 239              		.cfi_def_cfa_offset 8
 240              		@ sp needed
 241 0084 10BD     		pop	{r4, pc}
 242              	.L8:
 243 0086 00BF     		.align	2
 244              	.L7:
 245 0088 00380240 		.word	1073887232
 246 008c 00700040 		.word	1073770496
 247              		.cfi_endproc
 248              	.LFE124:
 250              		.section	.text.main,"ax",%progbits
 251              		.align	2
 252              		.global	main
 253              		.thumb
 254              		.thumb_func
 256              	main:
 257              	.LFB123:
  56:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 258              		.loc 1 56 0
 259              		.cfi_startproc
 260              		@ Volatile: function does not return.
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI6:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
  60:Src/main.c    **** 
 268              		.loc 1 60 0
 269 0002 FFF7FEFF 		bl	HAL_Init
 270              	.LVL4:
  63:Src/main.c    **** 
 271              		.loc 1 63 0
 272 0006 FFF7FEFF 		bl	SystemClock_Config
 273              	.LVL5:
  66:Src/main.c    **** 
 274              		.loc 1 66 0
 275 000a FFF7FEFF 		bl	MX_GPIO_Init
 276              	.LVL6:
 277              	.L10:
  71:Src/main.c    **** 	HAL_Delay(200);
 278              		.loc 1 71 0 discriminator 1
 279 000e 0448     		ldr	r0, .L12
 280 0010 0221     		movs	r1, #2
 281 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 282              	.LVL7:
  72:Src/main.c    ****   }
 283              		.loc 1 72 0 discriminator 1
 284 0016 C820     		movs	r0, #200
 285 0018 FFF7FEFF 		bl	HAL_Delay
 286              	.LVL8:
ARM GAS  /tmp/ccLxLnxJ.s 			page 9


  73:Src/main.c    **** 
 287              		.loc 1 73 0 discriminator 1
 288 001c F7E7     		b	.L10
 289              	.L13:
 290 001e 00BF     		.align	2
 291              	.L12:
 292 0020 00040240 		.word	1073873920
 293              		.cfi_endproc
 294              	.LFE123:
 296              		.section	.text.Error_Handler,"ax",%progbits
 297              		.align	2
 298              		.global	Error_Handler
 299              		.thumb
 300              		.thumb_func
 302              	Error_Handler:
 303              	.LFB126:
 153:Src/main.c    **** 
 154:Src/main.c    **** /* USER CODE BEGIN 4 */
 155:Src/main.c    **** 
 156:Src/main.c    **** /* USER CODE END 4 */
 157:Src/main.c    **** 
 158:Src/main.c    **** /**
 159:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 160:Src/main.c    ****   * @retval None
 161:Src/main.c    ****   */
 162:Src/main.c    **** void Error_Handler(void)
 163:Src/main.c    **** {
 304              		.loc 1 163 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE126:
 313 0002 00BF     		.text
 314              	.Letext0:
 315              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 316              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 317              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 318              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 319              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 320              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 321              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 322              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 323              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccLxLnxJ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLxLnxJ.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLxLnxJ.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLxLnxJ.s:134    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccLxLnxJ.s:140    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLxLnxJ.s:145    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLxLnxJ.s:245    .text.SystemClock_Config:0000000000000088 $d
     /tmp/ccLxLnxJ.s:251    .text.main:0000000000000000 $t
     /tmp/ccLxLnxJ.s:256    .text.main:0000000000000000 main
     /tmp/ccLxLnxJ.s:292    .text.main:0000000000000020 $d
     /tmp/ccLxLnxJ.s:297    .text.Error_Handler:0000000000000000 $t
     /tmp/ccLxLnxJ.s:302    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
